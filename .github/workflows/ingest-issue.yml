name: Ingest Event Issue

on:
  issues:
    types: [opened, edited, labeled]

permissions:
  contents: write
  pull-requests: write
  issues: write

jobs:
  ingest:
    # <-- This prevents the job from running on pushes that only change this file
    if: ${{ github.event_name == 'issues' }}
    runs-on: ubuntu-latest

    steps:
      - name: Require 'event' label
        run: |
          echo "Labels: ${{ toJson(github.event.issue.labels.*.name) }}"
          if [[ "${{ contains(github.event.issue.labels.*.name, 'event') }}" != "true" ]]; then
            echo "Not an 'event' issue (yet). Exiting."
            exit 0
          fi

      - uses: actions/checkout@v4

      - name: Ensure data dir + header
        run: |
          mkdir -p data
          if [ ! -f data/event_log_template.csv ]; then
            echo 'Timestamp,Speaker/Role,Decision/Observation,Evidence Reference,Action Item,Owner,Tags' > data/event_log_template.csv
          fi

      - name: Extract fields â†’ labels + CSV row
        id: extract
        uses: actions/github-script@v7
        with:
          script: |
            const body = context.payload.issue.body || "";
            function grab(label){
              const esc = label.replace(/[.*+?^${}()|[\]\\]/g, '\\$&');
              const rx = new RegExp(`^###\\s+${esc}\\s*[\\r\\n]+([\\s\\S]*?)(?:\\r?\\n(?=###\\s)|$)`, 'm');
              const m = body.match(rx);
              return m ? m[1].trim() : '';
            }
            const ts         = grab('Timestamp \\(UTC ISO 8601\\)');
            const speaker    = grab('Speaker/Role');
            const observation= grab('Decision/Observation');
            const evidence   = grab('Evidence Reference');
            const action     = grab('Action Item');
            const owner      = grab('Owner');
            const source     = grab('Source / Log Type');
            const cell       = grab('Team / Cell');
            const phase      = grab('Incident Phase');
            const severity   = grab('Severity \\(optional\\)');
            const cve        = grab('CVE / TTP / Actor \\(optional\\)');
            const service    = grab('System / Service \\(optional\\)');

            const labels = [
              `source:${(source||'custom').toLowerCase().replace(/\s+/g,'-')}`,
              `cell:${(cell||'blue').toLowerCase()}`,
              `phase:${(phase||'detect').toLowerCase()}`
            ];
            if (severity) labels.push(`sev:${severity.toLowerCase()}`);
            if (cve) cve.split(/[;,]/).map(s=>s.trim()).filter(Boolean).forEach(v=>{
              if (/^CVE-\d{4}-\d+$/i.test(v)) labels.push(`cve:${v.toUpperCase()}`);
              else if (/^T\d{4}/i.test(v))    labels.push(`ttp:${v.toUpperCase()}`);
              else                             labels.push(`actor:${v.replace(/\s+/g,'-').toLowerCase()}`);
            });
            if (service) labels.push(`service:${service.toLowerCase().replace(/\s+/g,'-')}`);

            await github.rest.issues.addLabels({ ...context.repo, issue_number: context.issue.number, labels }).catch(()=>{});

            const esc = s => `"${String(s||'').replace(/"/g,'""')}"`;
            const row = [ts, speaker, observation, evidence, action, owner, labels.join(';')].map(esc).join(',');
            core.setOutput('row', row);

      - name: Validate + append + sort
        run: |
          printf %s "${{ steps.extract.outputs.row }}" > /tmp/newrow.csv
          python - << 'PY'
import csv,re
r = next(csv.reader(open('/tmp/newrow.csv')))
assert len(r)==7, f"expected 7 cols, got {len(r)}"
iso = re.compile(r'^\d{4}-\d{2}-\d{2}T\d{2}:\d{2}:\d{2}Z$')
assert iso.match(r[0]), f"bad timestamp: {r[0]}"
for i,name in enumerate(["Speaker/Role","Decision/Observation","Evidence Reference","Action Item","Owner"], start=1):
    assert r[i].strip('"').strip(), f"missing field: {name}"
print("OK")
PY
          printf '%s\n' "${{ steps.extract.outputs.row }}" >> data/event_log_template.csv
          { head -n1 data/event_log_template.csv && tail -n +2 data/event_log_template.csv | sort -t, -k1,1; } > data/_tmp.csv
          mv data/_tmp.csv data/event_log_template.csv

      - name: Open PR
        id: cpr
        uses: peter-evans/create-pull-request@v6
        with:
          commit-message: "Add event from issue #${{ github.event.issue.number }}"
          title: "Ingest event #${{ github.event.issue.number }}"
          body: "Automated ingest from issue #${{ github.event.issue.number }}"
          branch: "bot/add-event-${{ github.event.issue.number }}"
          labels: ingest
